<?xml version="1.0" encoding="UTF-8"?>


<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="control.project.mapper.ReservationMapper">
 
	<!-- 예약 정보 저장하기 insert -->
	<insert id="reserve">
		<selectKey keyProperty="rno" order="BEFORE" resultType="int">
			select max(rno)+1 rno
			from reservation
		</selectKey>
		
		insert into reservation(rno, customerName, personalNumber, email, medicalDept, doctor, reservationTime, otherInfo)
		values(#{rno}, #{customerName}, #{personalNumber}, #{email}, #{medicalDept}, #{doctor}, #{reservationTime}, #{otherInfo})
	</insert>	

	<!-- 예약 정보 불러오기 select 0419 -->		
	<select id="list" resultType="control.project.model.ReservationVO">
		select * from reservation 
		      <if test="doctor1 != null"> 
                   where doctor = #{doctor1} <!-- doctor1:검색용 화면에서 설정한 의료진 doctor:DB에 있는 의료진 -->
                  <choose>
                     <when test="date1 != date2"> 
                         and reservationTime between #{date1} and #{date2} 
                     </when>
                     <otherwise>
                         and date(reservationTime) = #{date2} 
                     </otherwise>
                   </choose>
                </if>												
		   	order by reservationTime
	<!--   	limit #{skip}, #{amount}		-->
	</select>
	
	<!-- 예약 전체 건수 불러오기 select 0419 -->	
	<select id="total" resultType="int">
		select count(*) from reservation 
		   <if test="doctor1 != null">
                   where doctor = #{doctor1} 
                  <choose>
                     <when test="date1 != date2"> 
                         and reservationTime between #{date1} and #{date2} 
                     </when>
                     <otherwise>
                         and date(reservationTime) = #{date2} 
                     </otherwise>
                   </choose>
            </if>												
		   	order by reservationTime
	</select>
	 
	<!-- 예약 불가능 시간 불러오기 -->
	<select id="getDate" resultType="control.project.model.ReservationVO">
		SELECT DATE_FORMAT(reservationTime, '%H:%i') AS reservationTime
		FROM reservation
		WHERE reservationTime LIKE CONCAT(#{settedYearMonth}, '%')
	</select>
	
	<!-- 예약 상세정보 불러오기 select 0424 -->
    <select id="detail" resultType="control.project.model.ReservationVO">
         select * from reservation
         where rno = #{rno} 
    </select>

    <!-- 예약 상세정보 수정(저장)하기 update 0424 -->
    <update id="modify">
    	update reservation
    	set customerName=#{customerName}, personalNumber=#{personalNumber}, 
    	email=#{email}, medicalDept=#{medicalDept}, doctor=#{doctor}, 
    	reservationTime=#{reservationTime}, otherInfo=#{otherInfo}
    	where rno = #{rno} 
    </update>

    <!-- 예약 상세정보 삭제하기 delete 0424 -->
    <delete id="remove">
    	delete from reservation
    	where rno = #{rno} 
    </delete>
	
	<!-- 관리자 로그인 기능 0427 -->
	<select id="login" resultType="control.project.model.AdminLoginVO">
		select *
		from admin
		where adminId=#{adminId} and adminPass=#{adminPass}
	</select>
	
	<!-- 예약 완료 후 확인페이지 정보 불러오기 0501 -->		
	<select id="userCheck" resultType="control.project.model.ReservationVO">
		select * from reservation
		where personalNumber = #{personalNumber} and rno = #{rno}
	</select>
	
	<!-- 예약 완료 후 정보 삭제 -->
	<delete id="delete">
		delete from reservation
		where rno = #{rno}
	</delete>
	
	<!-- 회원정보 입력 후 예약 정보 불러오기 0503 -->		
	<select id="selfCheckList" resultType="control.project.model.ReservationVO">
		select * from reservation where personalNumber = #{personalNumber}
	</select>
	
</mapper>